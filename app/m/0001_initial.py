# Generated by Django 3.0 on 2020-12-02 09:12

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_auto_20201202_1504'),
    ]

    operations = [
        migrations.CreateModel(
            name='appUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Сотовый')),
                ('fathername', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('gender', models.IntegerField(choices=[(0, 'None'), (1, 'Male'), (2, 'Female')], default=0, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата рождение')),
                ('card', models.CharField(blank=True, max_length=16, null=True, verbose_name='Банковская карта')),
                ('position', models.CharField(blank=True, max_length=20, null=True, verbose_name='Должность')),
                ('school_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Школа')),
                ('sub_domen', models.CharField(blank=True, max_length=15, null=True, verbose_name='Домен')),
                ('country', models.CharField(default='Kazakhstan', max_length=20, null=True, verbose_name='Страна')),
                ('subdivison', models.CharField(blank=True, max_length=20, null=True, verbose_name='Подразделение')),
                ('lead_activity', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Активность лида')),
                ('client_activity', models.DateTimeField(null=True, verbose_name='Активность клиента')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('can_add_comment', 'Can add comments'), ('can_edit_user_data', 'Can edit user data')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Название')),
                ('cost', models.IntegerField(default=0, help_text='в тенге', verbose_name='Стоимость')),
                ('poster', models.TextField(max_length=1000, verbose_name='Постер')),
                ('short_desc', models.TextField(max_length=200, verbose_name='Короткое описание')),
                ('full_desc', models.TextField(max_length=500, verbose_name='Полное описание')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Начало даты')),
                ('end_date', models.DateField(verbose_name='Конец даты')),
                ('course_programm', models.CharField(max_length=30, verbose_name='Программа курса')),
                ('duration', models.IntegerField(default=0, help_text='в минутах', verbose_name='Длителность')),
                ('pub_date', models.DateTimeField(verbose_name='Дата публикации')),
                ('creator_id', models.ForeignKey(blank=True, help_text='Создатель курса', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
